######################## CONDITION INFO SUBS ##############################

#--------------------------Get Subj Info: -------------------------------------
sub Get_subj_info(string inpstr1) begin

	t_info1.set_caption(inpstr1);
	t_info1.redraw();
	p_info.present();
	system_keyboard.set_case_mode(3); # Hoofdletters mogelijk.
	subnr = system_keyboard.get_input( p_info, t_info2 ); # Hier zit de backspace ingebakken.

end;

#-----------------------------Get_stimulus_file------------------------------------
sub Get_stimulus_file(string str ) begin              
   input_file inputfile = new input_file;
   inputfile.open( str );    

  inputfile.close();
  inputfile.open( str );
  inputfile.set_delimiter( '\t' ); # for get_line()
  int count = 0;

  loop until
    inputfile.end_of_file() || count == 500 || !inputfile.last_succeeded()
  begin
    count = count + 1;
    word1[count] 	= inputfile.get_line();
    word2[count] = inputfile.get_string();
    number[count] = inputfile.get_int();
  end;  

  if !inputfile.last_succeeded() then
    term.print( "Error while reading!\n" )
  elseif !inputfile.end_of_file() then
    term.print( "Exceeded capacity!\n" )
  end;   
  inputfile.close();
   
end;   
            
################################################### 
sub show_text( string message )
begin
   t_text1.set_caption( message );
   t_text1.redraw();
   P_text.present();
end;


#-----------------------------Wait------------------------------------
sub Wait(int dur_wait2) begin
   time_wait = clock.time();
   loop until clock.time() >= time_wait + dur_wait2
   begin end;
end;

#-----------------------------Countdown------------------------------------
sub Countdown(int counting) begin
   loop
     i = 1 
   until i > counting
   begin 
     #text13.set_caption( string(counting) );
     #text13.redraw();
     #trial1.present();
     counting = counting - 1;
     Wait(1000);
   end;
end;

#-----------------------------WaitSubjectReady------------------------------------
sub WaitForButtonpress( int button ) begin
    
   loop count_old = response_manager.total_response_count(button)
   until response_manager.total_response_count(button) > count_old
   begin end;
   
end;

############################ LOGFILE #######################   
#-----------------------------CreateOutput------------------------------------
sub CreateOutput(string str ) begin

	templog = "";
 
	templog.append("Trial_nr");   
	templog.append("\t");
	templog.append("picture");   
	templog.append("\t");
	templog.append("Response");   
	templog.append("\t");
	templog.append("Response_Time");   
	templog.append("\t");
	templog.append("Feedback");   
	templog.append("\t");
	templog.append("Fase");   
	templog.append("\t");
	templog.append("Pause_Times");   
	templog.append("\n");   

   ofile1 = new output_file;
   ofile1.open( str, false ); # don't overwrite
   #Create header of output file
   ofile1.print( templog );
	templog = "";
   ofile1.close();

end; 

#-----------------------------WriteOutput-------------------

sub WriteOutput(string str ) begin

   loop j = 1
   until j > (block_trial_size)
   begin
		templog.append(string(((block -1)  * block_trial_size) + j));   #write variable followed by a tab
		templog.append("\t");
		templog.append(subnr);   
		templog.append("\t");
		templog.append(string(Fixation[j]));   
		templog.append("\t");
		templog.append(string(Response_Value[j]));   
		templog.append("\n");   #next line
 		j = j + 1;
   end;  

   ofile1.open_append ( str ); # append
   ofile1.print( templog );
	templog = "";
   ofile1.close();
end;

############################ TRIAL #######################   

output_port oport = output_port_manager.get_port( 1 );
#oport.set_pulse_width( 17 );
#oport.set_pulse_width( 4 );
input_port serial = input_port_manager.get_port( 1 );

#-----------------------------runtrials------------een voor een presenteren------------------------
sub runtrials begin
	string sTextOnScreen = ("The number of loops is: ");
	int iInputPortCount = 0;
	
   serial.clear();
#   oport.send_code( 0 );  # set pulse time to 4 ms
#   oport.send_code( 1 );
#   oport.send_code( 4 );
	
   oport.send_code( 0 );
   oport.send_code( 2 );
   oport.send_code( 255 );
   Wait(1);

   int iloopCount = 0;
   p_instruction.present();
   WaitForButtonpress( 1 );
	loop iloopCount = 0
   until iloopCount > 199 #block_trial_size
   begin
	   #write here your experiment
       
      #oport.send_code( 255 );
      white_screen.present();
      oport.send_code( 255 );
      #Wait(dur_wait);
   
	   black_screen.present();
      oport.send_code( 0 );
	   oport.send_code( 0 );
	   #black_screen.present();
	   #Wait(dur_wait);
	   
		
		

	   iloopCount = iloopCount + 1;
	
   end; 

   iInputPortCount = serial.total_count();

   #print the number of loops passed
   sTextOnScreen.append(string( iloopCount ));
   show_text( sTextOnScreen );
   WaitForButtonpress( 1 );

   sTextOnScreen  = ("The number of counted pulses is: ");
   sTextOnScreen.append(string( iInputPortCount ));
   show_text( sTextOnScreen );
   WaitForButtonpress( 1 );

end;

###################################################                                                       

#-----------------------------EndFB-------------------

sub EndFB begin
  p_end.present();
	loop
    count_old = response_manager.total_response_count(button_enter)
  until
    response_manager.total_response_count(button_enter) > count_old
  begin
  end;
end;  

# -------------------------- THE END -----------------------------